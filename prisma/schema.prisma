// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Tag {
  id         String   @id @default(uuid())
  name       String   @unique
  color      String?
  created_at DateTime @default(now()) // optional: user id/email later

  @@index([name])
  @@map("tags")
}

model Workspace {
  id            String          @id @default(cuid())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  WorkspaceRoom WorkspaceRoom[]

  @@map("workspaces")
}

model WorkspaceRoom {
  id          String   @id @default(cuid())
  workspaceId String
  // Liveblocks room id (kept as-is; you can re-use existing rooms)
  roomId      String   @unique
  title       String   @default("Untitled")
  index       Int      @default(0) // ordering in tabs
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  @@index([workspaceId, index])
  @@map("workspace_rooms")
}
